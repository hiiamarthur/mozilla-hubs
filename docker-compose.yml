version: '2.3'
services:
  hubs:
    build: 
      context: ./hubs
      dockerfile: Dockerfile.hubs
      args:   # not env because they are used in build time
        # - HOST="localhost"
        - CORS_PROXY_HOST=hubs-proxy.local
        # - RETICULUM_SOCKET_SERVER="localhost"
        # - CORS_PROXY_SERVER=hubs-proxy.local:4000
        # - NON_CORS_PROXY_DOMAINS=localhost,dev.reticulum.io
        # - BASE_ASSETS_PATH=http://localhost:8080/
        # - RETICULUM_SERVER="localhost:4000"
        # - POSTGREST_SERVER="db:5432" 
        # - ITA_SERVER=""
        # - NGINX_HOST=localhost
        # - NGINX_PORT=80
        # - DIALOG_HOST="hubs.docker.internal"
        # - DIALOG_PORT="4443"
    image: mozzila-hubs
    command: bash -c "npm run local"
    restart: always
    ports:
      # - '8080:4443'
      - '8080:8080'
      # - '8989:8989'
  admin:
    build: 
      context: ./hubs
      dockerfile: Dockerfile.hubs
      args:   # not env because they are used in build time
        - HOST="localhost"
        - CORS_PROXY_HOST=hubs-proxy.local
        - RETICULUM_SOCKET_SERVER="localhost"
        - CORS_PROXY_SERVER=hubs-proxy.local:4000
        - NON_CORS_PROXY_DOMAINS=localhost,dev.reticulum.io
        - BASE_ASSETS_PATH=https://localhost:8080/
        - RETICULUM_SERVER="localhost:4000"
        - POSTGREST_SERVER="" 
        - ITA_SERVER=""
        - NGINX_HOST=localhost
        - NGINX_PORT=80
    image: mozzila-hubs
    command: bash -c "cd admin && npm run local"
    restart: always
    ports:
      # - '8080:4443'
      # - '8080:8080'
      - '8989:8989'
    
    # network_mode: host
  # admin:
  #   build: 
  #     context: ./hubs
  #     dockerfile: Dockerfile.admin
  #     args:   # not env because they are used in build time
  #       - HOST="localhost"
  #       - CORS_PROXY_HOST=hubs-proxy.local
  #       - RETICULUM_SOCKET_SERVER="localhost"
  #       - CORS_PROXY_SERVER=hubs-proxy.local:4000
  #       - NON_CORS_PROXY_DOMAINS=localhost,dev.reticulum.io
  #       - BASE_ASSETS_PATH=https://localhost:8989/
  #       - RETICULUM_SERVER="localhost:4000"
  #       - POSTGREST_SERVER="" 
  #       - ITA_SERVER=""
  #       # - NGINX_HOST=localhost
  #       # - NGINX_PORT=80
  #   image: mozzila-hubs-admin
  #   # restart: always
  #   command: npm run local
  #   ports:
  #     # - '8989:4453'
  #     - '8989:8989'
      
  spoke:
    build: 
      context: ./Spoke
      dockerfile: Dockerfile
    image: spoke
    # restart: always
    ports:
      - '9090:9090'
    environment:
      - HOST="localhost"
    # command: /bin/bash
    # network_mode: host
  dialog:
    build: 
      context: ./dialog
      dockerfile: Dockerfile
    image: dialog
    # restart: always
    ports:
      - '4443:4443'
    environment:
      - HOST="localhost"
      - DOMAIN=localhost
    command: /bin/bash
    # network_mode: host
    stdin_open: true
    tty: true 
  dbRest:
    image: postgrest/postgrest
    ports:
      - "3000:3000"
    environment:
      PGRST_DB_URI: postgres://postgres:postgres@db:5432/ret_dev
      PGRST_DB_SCHEMAS: ret0_admin
      PGRST_DB_ANON_ROLE: postgres_anonymous #In production this role should not be the same as the one used for the connection
      PGRST_OPENAPI_SERVER_PROXY_URI: http://127.0.0.1:3000
      PGRST_JWT_SECRET: '{"d":"WFq9FBfHEAt94jtverrbbm4sf8fQqkTUVTPphCkTqYoDh7jIkKmzu8Kuu5kjej6PrHgLvt_ow7W35kaGOC4tv9KcruSd0GPooA0oPtUJF9dqdRvVvPd-ngrQPiUm32hg553vEBtuSEdIReAdF_QtMSVVRu2VcyD1nkd5msC-3YE","dp":"bye44dd6D8m0z5VlqQAuNvxNHHWJUfqbJemhZCbSBddyoBuRxNhADC2P5iEijsQRVqL7IyL-ox7yGQzTOi2d9Q","dq":"Zr3oI-Tin2ziqv-GeqDkA0dkHo59mhrSfH6Kg-2AxVI9HRcohXART9T1kyarACIjWfX-753Vk8GedC0VqsR4QQ","e":"AQAB","kty":"RSA","n":"sXbh9wv9VL8ja-nTV9YOxp7mah_fgODxektLM89y7AeqdpVm0Ir_vKOuvFA9SVGyjfWZIiJgnCaJENUgbqDuoM-SMrOgQgF71AOBQEN88wvwpk3FUVhJP-bmig8ToSpvllq86rkkjynBXuR25buiGsWT-Gj7hjdR0ctHFIZ5-Bc","p":"81x7ti5RTrqlrukKIQ-tjNdYCtUifsbC9Y5Row6byqWtG9jzKIDNkCbT0SSgTPUjwQZTn7iWbur0fSA1su9tVw","q":"uq5K630GuTotznX09RYvK9ZKcDOkgM7-86orfzHO5B79pV3j4keiJFAR4vHMiNkYS6P-iQBmGhIOu6QAQSRTQQ","qi":"HoIO1F7sqASkzdSBfR4TF9iM6UHh_g32os6fdHgVyi-tvLgE5P79jtTX3BAcr4ahiETGGEZcy6_OnR1RQuWmaQ"}'
      PGRST_AUD: ret_perms
      PGRST_ROLE_CLAIM_KEY: .postgrest_role
    depends_on:
      - db
    links:
      - db:db
    networks:
      - pgnetwork
  db:
    image: postgres:alpine
    environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
    volumes:
        - ./tmp/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - testnewtwork
      - pgnetwork
    command:
      postgres -c stats_temp_directory=/tmp
  reticulum:
    build: ./reticulum
    image: mozzila-reticulum
    # restart: always
    environment:
      - DB_HOST=db
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - MIX_ENV=dev
      # - HUBS_HOST=hubs
      # - HUBS_PORT=4443
      # - ADMIN_HOST=admin
      # - ADMIN_PORT=4444
      # - SPOKE_HOST=spoke
      # - SPOKE_PORT=80
    # command: bash -ic "source ~/kerl/23.3/activate && mix phx.server"
    command: /bin/bash
    volumes:
        - .:/ret
    ports:
        - "4000:4000"
    # links:
    #   - "db:db"
    depends_on:
        - db
    networks:
      - testnewtwork
    stdin_open: true
    tty: true 
networks:
  testnewtwork:
    external: false
  pgnetwork:
      driver: bridge